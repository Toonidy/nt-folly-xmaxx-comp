scalar Time

enum UserStatus {
	NEW
	ACTIVE
	DISQUALIFIED
}

enum CompetitionStatus {
	DRAFT
	STARTED
	FINISHED
	FAILED
}

enum MembershipType {
	BASIC
	GOLD
}

input TimeRangeInput {
	timeFrom: Time!
	timeTo: Time!
}

type User {
	id: ID!
	username: String!
	displayName: String!
	membershipType: MembershipType!
	totalPoints: Int!
	status: UserStatus!
	createdAt: Time!
	updatedAt: Time!
}

type Competition {
	id: ID!
	status: CompetitionStatus!
	multiplier: Int!
	grindRewards: [CompetitionPrize!]!
	pointRewards: [CompetitionPrize!]!
	speedRewards: [CompetitionPrize!]!
	accuracyRewards: [CompetitionPrize!]!
	startAt: Time!
	finishAt: Time!
}

type CompetitionPrize {
	rank: Int!
	points: Int!
}

type Query {
	users(timeRange: TimeRangeInput): [User!]!
	competitions(timeRange: TimeRangeInput): [Competition!]!
}
